{"ast":null,"code":"var _jsxFileName = \"/Users/konstasya/Downloads/test-avito/src/components/Issues/Main.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllIssues } from \"../../shared/api\";\nimport IssuesList from \"./IssuesList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIssuesData } from \"../../slices/slice\";\nimport { Box } from \"@mui/material\";\nimport Filters from \"./Filters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [filteredIssues, setFilteredIssues] = useState([]);\n  const dispatch = useDispatch();\n  const allIssues = useSelector(state => state.dataIssues.dataAllIssues);\n  const boards = useSelector(state => state.dataBoards.boardsData);\n  useEffect(() => {\n    const controller = new AbortController();\n    getAllIssues().then(res => {\n      if (res) dispatch(setIssuesData(res.data));\n    }).catch(err => {\n      console.error(\"Ошибка\", err);\n    });\n    return () => controller.abort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      issues: allIssues,\n      boards: boards,\n      onFilteredChange: setFilteredIssues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IssuesList, {\n      data: filteredIssues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"eO0l1UZeV/B6b8VrBIgwXezZ4H8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","getAllIssues","IssuesList","useDispatch","useSelector","setIssuesData","Box","Filters","jsxDEV","_jsxDEV","Main","_s","filteredIssues","setFilteredIssues","dispatch","allIssues","state","dataIssues","dataAllIssues","boards","dataBoards","boardsData","controller","AbortController","then","res","data","catch","err","console","error","abort","sx","p","children","issues","onFilteredChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/konstasya/Downloads/test-avito/src/components/Issues/Main.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getAllIssues } from \"../../shared/api\";\nimport { DataProjectIssue, State } from \"../../types/types\";\nimport IssuesList from \"./IssuesList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIssuesData } from \"../../slices/slice\";\nimport {\n  Box,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst Main = () => {\n  const [filteredIssues, setFilteredIssues] = useState<DataProjectIssue[]>([]);\n\n  const dispatch = useDispatch();\n  const allIssues = useSelector(\n    (state: State) => state.dataIssues.dataAllIssues\n  );\n  const boards = useSelector((state: State) => state.dataBoards.boardsData);\n\n  useEffect(() => {\n    const controller = new AbortController()\n    getAllIssues()\n      .then((res) => {\n        if (res) dispatch(setIssuesData(res.data));\n      })\n      .catch((err) => {\n        console.error(\"Ошибка\", err);\n      });\n      return () => controller.abort();\n  }, []);\n\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Filters\n        issues={allIssues}\n        boards={boards}\n        onFilteredChange={setFilteredIssues}\n      />\n      <IssuesList data={filteredIssues} />\n    </Box>\n  );\n};\nexport default Main;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SACEC,GAAG,QACE,eAAe;AACtB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAqB,EAAE,CAAC;EAE5E,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,SAAS,GAAGX,WAAW,CAC1BY,KAAY,IAAKA,KAAK,CAACC,UAAU,CAACC,aACrC,CAAC;EACD,MAAMC,MAAM,GAAGf,WAAW,CAAEY,KAAY,IAAKA,KAAK,CAACI,UAAU,CAACC,UAAU,CAAC;EAEzEtB,SAAS,CAAC,MAAM;IACd,MAAMuB,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxCtB,YAAY,CAAC,CAAC,CACXuB,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,EAAEX,QAAQ,CAACT,aAAa,CAACoB,GAAG,CAACC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEF,GAAG,CAAC;IAC9B,CAAC,CAAC;IACF,OAAO,MAAMN,UAAU,CAACS,KAAK,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEtB,OAAA,CAACH,GAAG;IAAC0B,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAChBzB,OAAA,CAACF,OAAO;MACN4B,MAAM,EAAEpB,SAAU;MAClBI,MAAM,EAAEA,MAAO;MACfiB,gBAAgB,EAAEvB;IAAkB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACF/B,OAAA,CAACP,UAAU;MAACwB,IAAI,EAAEd;IAAe;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAhCID,IAAI;EAAA,QAGSP,WAAW,EACVC,WAAW,EAGdA,WAAW;AAAA;AAAAqC,EAAA,GAPtB/B,IAAI;AAiCV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}