{"ast":null,"code":"var _jsxFileName = \"/Users/konstasya/Downloads/test-avito/src/components/ToDoProject/ToDoProjectBoard.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DragDropContext } from \"@hello-pangea/dnd\";\nimport { setItemIssuesData, setTasksBoard } from \"../../slices/slice\";\nimport { getItemBoard, getItemIssue, updateStatusIssue } from \"../../shared/api\";\nimport Column from \"./Column\";\nimport { COLUMN_STATUSES } from \"../../constants/constants\";\nimport TaskModal from \"../modalWindow/ModalWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoProjectBoard = ({\n  tasks\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedBoard = useSelector(state => state.dataBoards.itemBoardData);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editingTaskId, setEditingTaskId] = useState();\n  const tasksByColumnId = Object.entries(COLUMN_STATUSES).reduce((acc, [columnId, {\n    status\n  }]) => {\n    acc[columnId] = tasks.filter(task => task.status === status);\n    return acc;\n  }, {});\n  const openTaskModal = taskId => {\n    setEditingTaskId(taskId);\n    setModalOpen(true);\n    if (taskId) {\n      getItemIssue(taskId).then(res => dispatch(setItemIssuesData(res.data)));\n    }\n  };\n  const closeTaskModal = () => {\n    setModalOpen(false);\n    setEditingTaskId(undefined);\n  };\n  const handleDragEnd = async result => {\n    var _COLUMN_STATUSES$dest;\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId) return;\n    const taskId = Number(draggableId);\n    const newStatus = (_COLUMN_STATUSES$dest = COLUMN_STATUSES[destination.droppableId]) === null || _COLUMN_STATUSES$dest === void 0 ? void 0 : _COLUMN_STATUSES$dest.status;\n    if (!newStatus) return;\n    try {\n      await updateStatusIssue(taskId, newStatus);\n      const updatedTasks = tasks.map(task => task.id === taskId ? {\n        ...task,\n        status: newStatus\n      } : task);\n      dispatch(setTasksBoard(updatedTasks));\n    } catch (error) {\n      console.error(\"Ошибка обновления статуса\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: selectedBoard === null || selectedBoard === void 0 ? void 0 : selectedBoard.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\",\n        borderCollapse: \"collapse\",\n        margin: \"0 auto\",\n        maxWidth: 1300\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.entries(COLUMN_STATUSES).map(([columnId, {\n            title\n          }]) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: \"1px solid #ccc\",\n              padding: \"8px\",\n              backgroundColor: \"lightblue\"\n            },\n            children: title\n          }, columnId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.entries(COLUMN_STATUSES).map(([columnId]) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid #ccc\",\n              verticalAlign: \"top\",\n              padding: \"8px\",\n              minHeight: 500,\n              backgroundColor: \"#f0f0f0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Column, {\n              id: columnId,\n              tasks: tasksByColumnId[columnId] || [],\n              onClick: openTaskModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, columnId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      open: modalOpen,\n      onClose: closeTaskModal,\n      taskId: editingTaskId,\n      currentBoardId: selectedBoard === null || selectedBoard === void 0 ? void 0 : selectedBoard.id,\n      onSaveSuccess: () => {\n        if (selectedBoard !== null && selectedBoard !== void 0 && selectedBoard.id) {\n          getItemBoard(selectedBoard.id).then(res => {\n            dispatch(setTasksBoard(res.data));\n          });\n        }\n        closeTaskModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoProjectBoard, \"HZCSyxsmte+DHeUZyh0jTlnt7jE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ToDoProjectBoard;\nexport default ToDoProjectBoard;\nvar _c;\n$RefreshReg$(_c, \"ToDoProjectBoard\");","map":{"version":3,"names":["useState","useDispatch","useSelector","DragDropContext","setItemIssuesData","setTasksBoard","getItemBoard","getItemIssue","updateStatusIssue","Column","COLUMN_STATUSES","TaskModal","jsxDEV","_jsxDEV","ToDoProjectBoard","tasks","_s","dispatch","selectedBoard","state","dataBoards","itemBoardData","modalOpen","setModalOpen","editingTaskId","setEditingTaskId","tasksByColumnId","Object","entries","reduce","acc","columnId","status","filter","task","openTaskModal","taskId","then","res","data","closeTaskModal","undefined","handleDragEnd","result","_COLUMN_STATUSES$dest","destination","source","draggableId","droppableId","Number","newStatus","updatedTasks","map","id","error","console","onDragEnd","children","style","textAlign","name","fileName","_jsxFileName","lineNumber","columnNumber","width","borderCollapse","margin","maxWidth","title","border","padding","backgroundColor","verticalAlign","minHeight","onClick","open","onClose","currentBoardId","onSaveSuccess","_c","$RefreshReg$"],"sources":["/Users/konstasya/Downloads/test-avito/src/components/ToDoProject/ToDoProjectBoard.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  DragDropContext,\n  DropResult,\n} from \"@hello-pangea/dnd\";\n\nimport { DataProjectIssue, State } from \"../../types/types\";\nimport { setItemIssuesData, setTasksBoard } from \"../../slices/slice\";\nimport {\n  getItemBoard,\n  getItemIssue,\n  updateStatusIssue,\n} from \"../../shared/api\";\n\nimport Column from \"./Column\";\nimport { COLUMN_STATUSES } from \"../../constants/constants\";\nimport TaskModal from \"../modalWindow/ModalWindow\";\n\ntype IssuesTasksProps = {\n  tasks: DataProjectIssue[];\n};\n\nconst ToDoProjectBoard = ({ tasks }: IssuesTasksProps) => {\n  const dispatch = useDispatch();\n  const selectedBoard = useSelector(\n    (state: State) => state.dataBoards.itemBoardData\n  );\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editingTaskId, setEditingTaskId] = useState<number>();\n\n  const tasksByColumnId: { [key: string]: DataProjectIssue[] } = Object.entries(\n    COLUMN_STATUSES\n  ).reduce((acc, [columnId, { status }]) => {\n    acc[columnId] = tasks.filter((task) => task.status === status);\n    return acc;\n  }, {} as { [key: string]: DataProjectIssue[] });\n\n  const openTaskModal = (taskId?: number) => {\n    setEditingTaskId(taskId);\n    setModalOpen(true);\n\n    if (taskId) {\n      getItemIssue(taskId).then((res) => dispatch(setItemIssuesData(res.data)));\n    }\n  };\n\n  const closeTaskModal = () => {\n    setModalOpen(false);\n    setEditingTaskId(undefined);\n  };\n\n  const handleDragEnd = async (result: DropResult) => {\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId) return;\n\n    const taskId = Number(draggableId);\n    const newStatus = COLUMN_STATUSES[destination.droppableId]?.status;\n    if (!newStatus) return;\n\n    try {\n      await updateStatusIssue(taskId, newStatus);\n      const updatedTasks = tasks.map((task) =>\n        task.id === taskId ? { ...task, status: newStatus } : task\n      );\n      dispatch(setTasksBoard(updatedTasks));\n    } catch (error) {\n      console.error(\"Ошибка обновления статуса\", error);\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <h2 style={{ textAlign: \"center\" }}>{selectedBoard?.name}</h2>\n      <table\n        style={{\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          margin: \"0 auto\",\n          maxWidth: 1300,\n        }}\n      >\n        <thead>\n          <tr>\n            {Object.entries(COLUMN_STATUSES).map(([columnId, { title }]) => (\n              <th\n                key={columnId}\n                style={{\n                  border: \"1px solid #ccc\",\n                  padding: \"8px\",\n                  backgroundColor: \"lightblue\",\n                }}\n              >\n                {title}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {Object.entries(COLUMN_STATUSES).map(([columnId]) => (\n              <td\n                key={columnId}\n                style={{\n                  border: \"1px solid #ccc\",\n                  verticalAlign: \"top\",\n                  padding: \"8px\",\n                  minHeight: 500,\n                  backgroundColor: \"#f0f0f0\",\n                }}\n              >\n                <Column\n                  id={columnId}\n                  tasks={tasksByColumnId[columnId] || []}\n                  onClick={openTaskModal}\n                />\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <TaskModal\n        open={modalOpen}\n        onClose={closeTaskModal}\n        taskId={editingTaskId}\n        currentBoardId={selectedBoard?.id}\n        onSaveSuccess={() => {\n          if (selectedBoard?.id) {\n            getItemBoard(selectedBoard.id).then((res) => {\n              dispatch(setTasksBoard(res.data));\n            });\n          }\n          closeTaskModal();\n        }}\n      />\n    </DragDropContext>\n  );\n};\n\nexport default ToDoProjectBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}