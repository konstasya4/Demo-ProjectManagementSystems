{"ast":null,"code":"var _jsxFileName = \"/Users/konstasya/Downloads/test-avito/src/components/Issues/Main.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllIssues } from \"../../shared/api\";\nimport IssuesList from \"./IssuesList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIssuesData } from \"../../slices/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [data, setData] = useState(); //Все задачи\n  const [filteredIssues, setFilteredIssues] = useState([]);\n  const [statusFilter, setStatusFilter] = useState([]); // массив выбранных status\n  const [boardFilter, setBoardFilter] = useState([]); // массив выбранных boardId\n\n  // 3. Состояние для единого текстового поиска (по названию ИЛИ по исполнителю)\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const dispatch = useDispatch();\n  const allIssues = useSelector(state => state.dataIssues.dataAllIssues);\n  useEffect(() => {\n    getAllIssues().then(res => {\n      setData(res.data);\n      if (res) dispatch(setIssuesData(res.data));\n    }).catch(err => {\n      console.error(\"Ошибка\", err);\n    });\n  }, []);\n  useEffect(() => {\n    if (allIssues.length === 0) {\n      setFilteredIssues([]);\n      return;\n    }\n    const qLower = searchQuery.trim().toLowerCase();\n    const result = allIssues.filter(issue => {\n      // 7.1. Фильтр по статусу (если хоть один статус выбран)\n      if (statusFilter.length > 0 && !statusFilter.includes(issue.status)) {\n        return false;\n      }\n      // 7.2. Фильтр по доске (boardId) (если хоть одна доска выбрана)\n      if (boardFilter.length > 0 && !boardFilter.includes(issue.boardId)) {\n        return false;\n      }\n      // 7.3. Текстовый поиск: если задано searchQuery, проверяем, что либо title, либо assignee содержит подстроку\n      if (qLower) {\n        const inTitle = issue.title.toLowerCase().includes(qLower);\n        const inAssignee = issue.assignee.toLowerCase().includes(qLower);\n        if (!inTitle && !inAssignee) {\n          return false;\n        }\n      }\n      return true;\n    });\n    setFilteredIssues(result);\n  }, [allIssues, statusFilter, boardFilter, searchQuery]);\n  return /*#__PURE__*/_jsxDEV(IssuesList, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n};\n_s(Main, \"ZWQy8MHFom6oEtpXxFqsu1WExzU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","getAllIssues","IssuesList","useDispatch","useSelector","setIssuesData","jsxDEV","_jsxDEV","Main","_s","data","setData","filteredIssues","setFilteredIssues","statusFilter","setStatusFilter","boardFilter","setBoardFilter","searchQuery","setSearchQuery","dispatch","allIssues","state","dataIssues","dataAllIssues","then","res","catch","err","console","error","length","qLower","trim","toLowerCase","result","filter","issue","includes","status","boardId","inTitle","title","inAssignee","assignee","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/konstasya/Downloads/test-avito/src/components/Issues/Main.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getAllIssues } from \"../../shared/api\"\nimport { DataProjectIssue, State } from \"../../types/types\"\nimport IssuesList from \"./IssuesList\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIssuesData } from \"../../slices/slice\";\n\nconst Main = () =>{\n    const [data, setData] = useState<DataProjectIssue[]>(); //Все задачи\n    const [filteredIssues, setFilteredIssues] = useState<DataProjectIssue[]>([]);\n\n    const [statusFilter, setStatusFilter] = useState<string[]>([]);   // массив выбранных status\n  const [boardFilter, setBoardFilter] = useState<number[]>([]);     // массив выбранных boardId\n\n  // 3. Состояние для единого текстового поиска (по названию ИЛИ по исполнителю)\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n\n    const dispatch = useDispatch()\n    const allIssues = useSelector((state:State)=>state.dataIssues.dataAllIssues)\n\n    useEffect(() => {\n      getAllIssues()\n        .then((res) => {\n            setData(res.data)\n            if (res) dispatch(setIssuesData(res.data))}\n        )\n        .catch((err) => {\n          console.error(\"Ошибка\", err);\n        });\n    }, []);\n\n    useEffect(() => {\n      if (allIssues.length === 0) {\n        setFilteredIssues([]);\n        return;\n      }\n      const qLower = searchQuery.trim().toLowerCase();\n      const result = allIssues.filter((issue) => {\n        // 7.1. Фильтр по статусу (если хоть один статус выбран)\n        if (statusFilter.length > 0 && !statusFilter.includes(issue.status)) {\n          return false;\n        }\n        // 7.2. Фильтр по доске (boardId) (если хоть одна доска выбрана)\n        if (boardFilter.length > 0 && !boardFilter.includes(issue.boardId)) {\n          return false;\n        }\n        // 7.3. Текстовый поиск: если задано searchQuery, проверяем, что либо title, либо assignee содержит подстроку\n        if (qLower) {\n          const inTitle = issue.title.toLowerCase().includes(qLower);\n          const inAssignee = issue.assignee.toLowerCase().includes(qLower);\n          if (!inTitle && !inAssignee) {\n            return false;\n          }\n        }\n        return true;\n      });\n      setFilteredIssues(result);\n    }, [allIssues, statusFilter, boardFilter, searchQuery]);\n  \n  \n    return <IssuesList data={data} />;\n  };\nexport default Main"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}