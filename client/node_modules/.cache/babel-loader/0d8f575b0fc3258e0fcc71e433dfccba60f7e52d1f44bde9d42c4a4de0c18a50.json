{"ast":null,"code":"var _jsxFileName = \"/Users/konstasya/Downloads/test-avito/src/components/Boards/BoardsList.tsx\",\n  _s = $RefreshSig$();\nimport { Button, CircularProgress, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport './style.css';\nimport { useNavigate } from \"react-router-dom\";\nimport paths from \"../../constants/routes/paths\";\nimport { useDispatch } from \"react-redux\";\nimport { setItemBoardData } from \"../../slices/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardsList = ({\n  data\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  if (!data) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this);\n  if (data.length === 0) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u043E\\u0441\\u043E\\u043A \\u043F\\u0443\\u0441\\u0442\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 33\n  }, this);\n  const handleChange = id => {\n    navigate(`${paths.toDoProject}/${id}`);\n    dispatch(setItemBoardData(data[id - 1]));\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      gap: 2\n    },\n    children: data.map(board => /*#__PURE__*/_jsxDEV(ListItem, {\n      divider: true,\n      className: \"list-item\",\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: board.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleChange(board.id),\n        children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u0434\\u043E\\u0441\\u043A\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, board.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n_s(BoardsList, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = BoardsList;\nexport default BoardsList;\nvar _c;\n$RefreshReg$(_c, \"BoardsList\");","map":{"version":3,"names":["Button","CircularProgress","List","ListItem","ListItemText","Typography","useNavigate","paths","useDispatch","setItemBoardData","jsxDEV","_jsxDEV","BoardsList","data","_s","navigate","dispatch","fileName","_jsxFileName","lineNumber","columnNumber","length","children","handleChange","id","toDoProject","sx","gap","map","board","divider","className","primary","name","onClick","_c","$RefreshReg$"],"sources":["/Users/konstasya/Downloads/test-avito/src/components/Boards/BoardsList.tsx"],"sourcesContent":["import { DataBoards } from \"../../types/types\";\nimport { Button, CircularProgress, List, ListItem, ListItemText, Paper, Typography } from \"@mui/material\";\nimport './style.css'\nimport { useNavigate } from \"react-router-dom\";\nimport paths from \"../../constants/routes/paths\";\nimport { useDispatch } from \"react-redux\";\nimport { setItemBoardData } from \"../../slices/slice\";\n\ntype BoardsListProps = {\n  data?: DataBoards[];\n};\n\n const BoardsList = ({ data }: BoardsListProps) => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n  if (!data) return <CircularProgress />;\n\n  if (data.length === 0) return <Typography>Список досок пуст</Typography>;\n\n  const handleChange= (id:number) => {\n    navigate(`${paths.toDoProject}/${id}`)\n    dispatch(setItemBoardData(data[id-1]))\n  }\n\n  return (\n      <List sx={{gap:2}}>\n        {data.map((board) => (\n          <ListItem key={board.id} divider className=\"list-item\">\n            <ListItemText\n              primary={board.name}\n            />\n            <Button onClick={()=>handleChange(board.id)}>Перейти к доске</Button>\n          </ListItem>\n        ))}\n      </List>\n  );\n}\n\nexport default BoardsList\n"],"mappings":";;AACA,SAASA,MAAM,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAASC,UAAU,QAAQ,eAAe;AACzG,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,8BAA8B;AAChD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMrD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAChC,IAAI,CAACK,IAAI,EAAE,oBAAOF,OAAA,CAACV,gBAAgB;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEtC,IAAIP,IAAI,CAACQ,MAAM,KAAK,CAAC,EAAE,oBAAOV,OAAA,CAACN,UAAU;IAAAiB,QAAA,EAAC;EAAiB;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;EAExE,MAAMG,YAAY,GAAGC,EAAS,IAAK;IACjCT,QAAQ,CAAC,GAAGR,KAAK,CAACkB,WAAW,IAAID,EAAE,EAAE,CAAC;IACtCR,QAAQ,CAACP,gBAAgB,CAACI,IAAI,CAACW,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,oBACIb,OAAA,CAACT,IAAI;IAACwB,EAAE,EAAE;MAACC,GAAG,EAAC;IAAC,CAAE;IAAAL,QAAA,EACfT,IAAI,CAACe,GAAG,CAAEC,KAAK,iBACdlB,OAAA,CAACR,QAAQ;MAAgB2B,OAAO;MAACC,SAAS,EAAC,WAAW;MAAAT,QAAA,gBACpDX,OAAA,CAACP,YAAY;QACX4B,OAAO,EAAEH,KAAK,CAACI;MAAK;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFT,OAAA,CAACX,MAAM;QAACkC,OAAO,EAAEA,CAAA,KAAIX,YAAY,CAACM,KAAK,CAACL,EAAE,CAAE;QAAAF,QAAA,EAAC;MAAe;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAJxDS,KAAK,CAACL,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb,CAAC;AAAAN,EAAA,CAxBMF,UAAU;EAAA,QACIN,WAAW,EACXE,WAAW;AAAA;AAAA2B,EAAA,GAFzBvB,UAAU;AA0BjB,eAAeA,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}