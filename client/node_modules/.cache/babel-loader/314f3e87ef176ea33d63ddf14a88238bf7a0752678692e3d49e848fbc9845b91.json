{"ast":null,"code":"var _jsxFileName = \"/Users/konstasya/Downloads/test-avito/src/components/header/Header.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Tab, Tabs } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport paths from \"../../constants/routes/paths\";\nimport TaskModal from \"../modalWindow/ModalWindow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getItemBoard } from \"../../shared/api\";\nimport { setTasksBoard } from \"../../slices/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const pathMap = {\n    0: paths.issues,\n    1: paths.boards\n  };\n  const getIndexByPath = pathname => {\n    if (pathname === paths.issues) return 0;\n    if (pathname === paths.boards) return 1;\n    return 1;\n  };\n  const selectedBoard = useSelector(state => state.dataBoards.itemBoardData);\n  const [value, setValue] = useState(getIndexByPath(location.pathname));\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  const isOnProjectBoardPage = location.pathname.startsWith(paths.toDoProject + \"/\");\n  useEffect(() => {\n    const currentIndex = getIndexByPath(location.pathname);\n    if (currentIndex !== value) {\n      setValue(currentIndex);\n    }\n  }, [location.pathname, value]);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    const path = pathMap[newValue];\n    if (path) {\n      navigate(path);\n    }\n  };\n  const handleOpenTaskModal = () => setIsTaskModalOpen(true);\n  const handleCloseTaskModal = () => setIsTaskModalOpen(false);\n  const handleSaveSuccess = () => {\n    getItemBoard(selectedBoard.id).then(res => {\n      dispatch(setTasksBoard(res.data));\n    });\n    setIsTaskModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      borderBottom: \"2px solid rgba(0,0,0,0.2)\",\n      paddingBottom: \"1vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: value,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"\\u0412\\u0441\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\",\n        onClick: event => {\n          handleChange(event, 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginRight: \"2vw\"\n      },\n      onClick: handleOpenTaskModal,\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      open: isTaskModalOpen,\n      onClose: handleCloseTaskModal,\n      onSaveSuccess: () => handleSaveSuccess(),\n      ...(isOnProjectBoardPage && selectedBoard !== null && selectedBoard !== void 0 && selectedBoard.id ? {\n        currentBoardId: selectedBoard.id\n      } : {})\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"qO8p69LVwMtAFJG54R6+X89nlks=\", false, function () {\n  return [useNavigate, useLocation, useDispatch, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Button","Tab","Tabs","useEffect","useState","useLocation","useNavigate","paths","TaskModal","useDispatch","useSelector","getItemBoard","setTasksBoard","jsxDEV","_jsxDEV","Header","_s","navigate","location","dispatch","pathMap","issues","boards","getIndexByPath","pathname","selectedBoard","state","dataBoards","itemBoardData","value","setValue","isTaskModalOpen","setIsTaskModalOpen","isOnProjectBoardPage","startsWith","toDoProject","currentIndex","handleChange","event","newValue","path","handleOpenTaskModal","handleCloseTaskModal","handleSaveSuccess","id","then","res","data","style","display","flexDirection","justifyContent","borderBottom","paddingBottom","children","onChange","label","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginRight","open","onClose","onSaveSuccess","currentBoardId","_c","$RefreshReg$"],"sources":["/Users/konstasya/Downloads/test-avito/src/components/header/Header.tsx"],"sourcesContent":["import { Button, Tab, Tabs } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport paths from \"../../constants/routes/paths\";\nimport TaskModal from \"../modalWindow/ModalWindow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { State } from \"../../types/types\";\nimport { getItemBoard } from \"../../shared/api\";\nimport { setTasksBoard } from \"../../slices/slice\";\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const pathMap: { [key: number]: string } = {\n    0: paths.issues,\n    1: paths.boards,\n  };\n\n  const getIndexByPath = (pathname: string) => {\n    if (pathname === paths.issues) return 0;\n    if (pathname === paths.boards) return 1;\n    return 1;\n  };\n\n  const selectedBoard = useSelector(\n    (state: State) => state.dataBoards.itemBoardData\n  );\n\n  const [value, setValue] = useState(getIndexByPath(location.pathname));\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n\n  const isOnProjectBoardPage = location.pathname.startsWith(\n    paths.toDoProject + \"/\"\n  );\n\n  useEffect(() => {\n    const currentIndex = getIndexByPath(location.pathname);\n    if (currentIndex !== value) {\n      setValue(currentIndex);\n    }\n  }, [location.pathname, value]);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n    const path = pathMap[newValue];\n    if (path) {\n      navigate(path);\n    }\n  };\n\n  const handleOpenTaskModal = () => setIsTaskModalOpen(true);\n  const handleCloseTaskModal = () => setIsTaskModalOpen(false);\n\n  const handleSaveSuccess = () => {\n    getItemBoard(selectedBoard.id).then((res) => {\n      dispatch(setTasksBoard(res.data));\n    });\n    setIsTaskModalOpen(false);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        borderBottom: \"2px solid rgba(0,0,0,0.2)\",\n        paddingBottom: \"1vh\",\n      }}\n    >\n      <Tabs value={value} onChange={handleChange}>\n        <Tab label=\"Все задачи\" />\n        <Tab\n          label=\"Проекты\"\n          onClick={(event) => {\n            handleChange(event, 1);\n          }}\n        />\n      </Tabs>\n      <Button style={{ marginRight: \"2vw\" }} onClick={handleOpenTaskModal}>\n        Создать задачу\n      </Button>\n      <TaskModal\n        open={isTaskModalOpen}\n        onClose={handleCloseTaskModal}\n        onSaveSuccess={() => handleSaveSuccess()}\n        {...(isOnProjectBoardPage && selectedBoard?.id\n          ? { currentBoardId: selectedBoard.id }\n          : {})}\n      />\n    </div>\n  );\n};\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}