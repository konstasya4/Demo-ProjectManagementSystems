{"ast":null,"code":"export const dataReducers = {\n  setBoardsData: (state, action) => {\n    state.dataBoards.boardsData = action.payload;\n    localStorage.setItem('boardsData', JSON.stringify(action.payload));\n  },\n  setItemBoardData: (state, action) => {\n    state.dataBoards.itemBoardData = action.payload;\n    localStorage.setItem('itemBoardData', JSON.stringify(action.payload));\n  },\n  setTasksBoard: (state, action) => {\n    state.dataBoards.tasksBoard = action.payload;\n  },\n  setIssuesData: (state, action) => {\n    state.dataIssues.dataAllIssues = action.payload;\n  },\n  setItemIssuesData: (state, action) => {\n    state.dataIssues.dataItemIssue = action.payload;\n  },\n  setUsersData: (state, action) => {\n    state.dataUsers = action.payload;\n  },\n  setDataFormsIssue: (state, action) => {\n    state.dataIssues.dataFormsIssue = action.payload;\n  }\n};","map":{"version":3,"names":["dataReducers","setBoardsData","state","action","dataBoards","boardsData","payload","localStorage","setItem","JSON","stringify","setItemBoardData","itemBoardData","setTasksBoard","tasksBoard","setIssuesData","dataIssues","dataAllIssues","setItemIssuesData","dataItemIssue","setUsersData","dataUsers","setDataFormsIssue","dataFormsIssue"],"sources":["/Users/konstasya/Downloads/test-avito/src/slices/reducers/dataReducers.ts"],"sourcesContent":["import { PayloadAction } from '@reduxjs/toolkit'\n\nimport { DataBoards, DataProjectIssue, DataUsers, NewIssues, State } from '../../types/types'\n\nexport const dataReducers = {\n  setBoardsData: (state: State, action: PayloadAction<DataBoards[]>) => {\n    state.dataBoards.boardsData = action.payload\n    localStorage.setItem('boardsData', JSON.stringify(action.payload));\n  },\n  setItemBoardData: (state: State, action: PayloadAction<DataBoards>) => {\n    state.dataBoards.itemBoardData = action.payload\n    localStorage.setItem('itemBoardData', JSON.stringify(action.payload));\n  },\n  setTasksBoard:(state: State, action: PayloadAction<DataProjectIssue[]>) => {\n    state.dataBoards.tasksBoard = action.payload\n  },\n  setIssuesData: (state: State, action: PayloadAction<DataProjectIssue[]>) => {\n    state.dataIssues.dataAllIssues = action.payload\n  },\n  setItemIssuesData:(state: State, action: PayloadAction<DataProjectIssue>) => {\n    state.dataIssues.dataItemIssue = action.payload\n  },\n  setUsersData: (state: State, action: PayloadAction<DataUsers[]>) => {\n    state.dataUsers = action.payload\n  },\n  setDataFormsIssue: (state: State, action: PayloadAction<NewIssues>) => {\n    state.dataIssues.dataFormsIssue = action.payload\n  },\n}\n   "],"mappings":"AAIA,OAAO,MAAMA,YAAY,GAAG;EAC1BC,aAAa,EAAEA,CAACC,KAAY,EAAEC,MAAmC,KAAK;IACpED,KAAK,CAACE,UAAU,CAACC,UAAU,GAAGF,MAAM,CAACG,OAAO;IAC5CC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM,CAACG,OAAO,CAAC,CAAC;EACpE,CAAC;EACDK,gBAAgB,EAAEA,CAACT,KAAY,EAAEC,MAAiC,KAAK;IACrED,KAAK,CAACE,UAAU,CAACQ,aAAa,GAAGT,MAAM,CAACG,OAAO;IAC/CC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM,CAACG,OAAO,CAAC,CAAC;EACvE,CAAC;EACDO,aAAa,EAACA,CAACX,KAAY,EAAEC,MAAyC,KAAK;IACzED,KAAK,CAACE,UAAU,CAACU,UAAU,GAAGX,MAAM,CAACG,OAAO;EAC9C,CAAC;EACDS,aAAa,EAAEA,CAACb,KAAY,EAAEC,MAAyC,KAAK;IAC1ED,KAAK,CAACc,UAAU,CAACC,aAAa,GAAGd,MAAM,CAACG,OAAO;EACjD,CAAC;EACDY,iBAAiB,EAACA,CAAChB,KAAY,EAAEC,MAAuC,KAAK;IAC3ED,KAAK,CAACc,UAAU,CAACG,aAAa,GAAGhB,MAAM,CAACG,OAAO;EACjD,CAAC;EACDc,YAAY,EAAEA,CAAClB,KAAY,EAAEC,MAAkC,KAAK;IAClED,KAAK,CAACmB,SAAS,GAAGlB,MAAM,CAACG,OAAO;EAClC,CAAC;EACDgB,iBAAiB,EAAEA,CAACpB,KAAY,EAAEC,MAAgC,KAAK;IACrED,KAAK,CAACc,UAAU,CAACO,cAAc,GAAGpB,MAAM,CAACG,OAAO;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}