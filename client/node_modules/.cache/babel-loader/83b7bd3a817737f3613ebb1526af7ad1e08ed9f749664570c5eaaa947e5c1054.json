{"ast":null,"code":"var _jsxFileName = \"/Users/konstasya/Downloads/test-avito/src/components/Issues/Main.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllIssues } from \"../../shared/api\";\nimport IssuesList from \"./IssuesList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIssuesData } from \"../../slices/slice\";\nimport { Box } from \"@mui/material\";\nimport Filters from \"./Filters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [data, setData] = useState();\n  const [filteredIssues, setFilteredIssues] = useState([]);\n  const [statusFilter, setStatusFilter] = useState([]);\n  const [boardFilter, setBoardFilter] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const dispatch = useDispatch();\n  const allIssues = useSelector(state => state.dataIssues.dataAllIssues);\n  const boards = useSelector(state => state.dataBoards.boardsData);\n  useEffect(() => {\n    getAllIssues().then(res => {\n      setData(res.data);\n      if (res) dispatch(setIssuesData(res.data));\n    }).catch(err => {\n      console.error(\"Ошибка\", err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      issues: allIssues,\n      boards: boards,\n      onFilteredChange: setFilteredIssues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(IssuesList, {\n      data: filteredIssues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 4\n  }, this);\n};\n_s(Main, \"/TOdoegcISU4ntlWttJWZnhr0A0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","getAllIssues","IssuesList","useDispatch","useSelector","setIssuesData","Box","Filters","jsxDEV","_jsxDEV","Main","_s","data","setData","filteredIssues","setFilteredIssues","statusFilter","setStatusFilter","boardFilter","setBoardFilter","searchQuery","setSearchQuery","drawerOpen","setDrawerOpen","dispatch","allIssues","state","dataIssues","dataAllIssues","boards","dataBoards","boardsData","then","res","catch","err","console","error","children","issues","onFilteredChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/konstasya/Downloads/test-avito/src/components/Issues/Main.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from \"react\";\nimport { getAllIssues } from \"../../shared/api\";\nimport { DataProjectIssue, State } from \"../../types/types\";\nimport IssuesList from \"./IssuesList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIssuesData } from \"../../slices/slice\";\nimport {\n  Box,\n  TextField,\n  Button,\n  Menu,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Divider,\n  Drawer,\n  IconButton,\n} from \"@mui/material\";\nimport { COLUMN_STATUSES } from \"../../constants/constants\";\nimport Filters from \"./Filters\";\n\nconst Main = () => {\n  const [data, setData] = useState<DataProjectIssue[]>();\n  const [filteredIssues, setFilteredIssues] = useState<DataProjectIssue[]>([]);\n\n  const [statusFilter, setStatusFilter] = useState<string[]>([]);\n  const [boardFilter, setBoardFilter] = useState<number[]>([]); \n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const dispatch = useDispatch();\n  const allIssues = useSelector(\n    (state: State) => state.dataIssues.dataAllIssues\n  );\n  const boards = useSelector((state: State) => state.dataBoards.boardsData);\n\n  useEffect(() => {\n    getAllIssues()\n      .then((res) => {\n        setData(res.data);\n        if (res) dispatch(setIssuesData(res.data));\n      })\n      .catch((err) => {\n        console.error(\"Ошибка\", err);\n      });\n  }, []);\n\n\n  return (\n   <Box>\n    <Filters\n        issues={allIssues}\n        boards={boards}\n        onFilteredChange={setFilteredIssues}\n      />\n      <IssuesList data={filteredIssues} />\n    </Box>\n  );\n};\nexport default Main;\n"],"mappings":";;AAAA,SAAsBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SACEC,GAAG,QAWE,eAAe;AAEtB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAqB,CAAC;EACtD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAqB,EAAE,CAAC;EAE5E,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAW,EAAE,CAAC;EAC9D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAW,EAAE,CAAC;EAC5D,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMwB,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAC9B,MAAMsB,SAAS,GAAGrB,WAAW,CAC1BsB,KAAY,IAAKA,KAAK,CAACC,UAAU,CAACC,aACrC,CAAC;EACD,MAAMC,MAAM,GAAGzB,WAAW,CAAEsB,KAAY,IAAKA,KAAK,CAACI,UAAU,CAACC,UAAU,CAAC;EAEzEhC,SAAS,CAAC,MAAM;IACdE,YAAY,CAAC,CAAC,CACX+B,IAAI,CAAEC,GAAG,IAAK;MACbpB,OAAO,CAACoB,GAAG,CAACrB,IAAI,CAAC;MACjB,IAAIqB,GAAG,EAAET,QAAQ,CAACnB,aAAa,CAAC4B,GAAG,CAACrB,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDsB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEF,GAAG,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,oBACC1B,OAAA,CAACH,GAAG;IAAAgC,QAAA,gBACH7B,OAAA,CAACF,OAAO;MACJgC,MAAM,EAAEd,SAAU;MAClBI,MAAM,EAAEA,MAAO;MACfW,gBAAgB,EAAEzB;IAAkB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACFnC,OAAA,CAACP,UAAU;MAACU,IAAI,EAAEE;IAAe;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACjC,EAAA,CArCID,IAAI;EAAA,QASSP,WAAW,EACVC,WAAW,EAGdA,WAAW;AAAA;AAAAyC,EAAA,GAbtBnC,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}