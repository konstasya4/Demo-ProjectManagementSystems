{"ast":null,"code":"var _jsxFileName = \"/Users/konstasya/Downloads/test-avito/src/components/Issues/IssuesList.tsx\",\n  _s = $RefreshSig$();\nimport { CircularProgress, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setItemIssuesData } from \"../../slices/slice\";\nimport TaskModal from \"../modalWindow/ModalWindow\";\nimport { useState } from \"react\";\nimport { getItemIssue } from \"../../shared/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IssuesList = ({\n  data\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedTaskId, setSelectedTaskId] = useState(undefined);\n  const selectedBoard = useSelector(state => state.dataBoards.itemBoardData);\n  if (!data) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  if (data.length === 0) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447 \\u043F\\u0443\\u0441\\u0442\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 33\n  }, this);\n  const openTaskModal = taskId => {\n    if (!taskId) return;\n    getItemIssue(taskId).then(res => {\n      dispatch(setItemIssuesData(res.data));\n      setSelectedTaskId(taskId);\n      setModalOpen(true);\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n  const closeTaskModal = () => {\n    setModalOpen(false);\n    setSelectedTaskId(undefined);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: data.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        className: \"list-item\",\n        onClick: () => openTaskModal(task.id),\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: task.title,\n          secondary: task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      open: modalOpen,\n      onClose: closeTaskModal,\n      taskId: selectedTaskId,\n      onSaveSuccess: closeTaskModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(IssuesList, \"m8rA3eyXYUlwAd11hlZK2hIitao=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = IssuesList;\nexport default IssuesList;\nvar _c;\n$RefreshReg$(_c, \"IssuesList\");","map":{"version":3,"names":["CircularProgress","List","ListItem","ListItemText","Typography","useDispatch","useSelector","setItemIssuesData","TaskModal","useState","getItemIssue","jsxDEV","_jsxDEV","Fragment","_Fragment","IssuesList","data","_s","dispatch","modalOpen","setModalOpen","selectedTaskId","setSelectedTaskId","undefined","selectedBoard","state","dataBoards","itemBoardData","fileName","_jsxFileName","lineNumber","columnNumber","length","children","openTaskModal","taskId","then","res","catch","e","console","error","closeTaskModal","map","task","divider","className","onClick","id","primary","title","secondary","status","open","onClose","onSaveSuccess","_c","$RefreshReg$"],"sources":["/Users/konstasya/Downloads/test-avito/src/components/Issues/IssuesList.tsx"],"sourcesContent":["import { DataProjectIssue, State } from \"../../types/types\";\nimport {\n  Button,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setItemIssuesData } from \"../../slices/slice\";\nimport TaskModal from \"../modalWindow/ModalWindow\";\nimport { useState } from \"react\";\nimport { getItemIssue } from \"../../shared/api\";\n\ntype IssuesListProps = {\n  data?: DataProjectIssue[];\n};\n\nconst IssuesList = ({ data }: IssuesListProps) => {\n  const dispatch = useDispatch();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedTaskId, setSelectedTaskId] = useState<number | undefined>(\n    undefined\n  );\n\n  const selectedBoard = useSelector(\n    (state: State) => state.dataBoards.itemBoardData\n  );\n\n  if (!data) return <CircularProgress />;\n\n  if (data.length === 0) return <Typography>Список задач пуст</Typography>;\n\n  const openTaskModal = (taskId?: number) => {\n    if (!taskId) return;\n    getItemIssue(taskId)\n      .then((res) => {\n        dispatch(setItemIssuesData(res.data));\n        setSelectedTaskId(taskId);\n        setModalOpen(true);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const closeTaskModal = () => {\n    setModalOpen(false);\n    setSelectedTaskId(undefined);\n  };\n\n  return (\n    <>\n      <List>\n        {data.map((task) => (\n          <ListItem\n            key={task.id}\n            divider\n            className=\"list-item\"\n            onClick={() => openTaskModal(task.id)}\n          >\n            <ListItemText primary={task.title} secondary={task.status}/>\n          </ListItem>\n        ))}\n      </List>\n\n      <TaskModal\n        open={modalOpen}\n        onClose={closeTaskModal}\n        taskId={selectedTaskId}\n        onSaveSuccess={closeTaskModal}\n      />\n    </>\n  );\n};\n\nexport default IssuesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}