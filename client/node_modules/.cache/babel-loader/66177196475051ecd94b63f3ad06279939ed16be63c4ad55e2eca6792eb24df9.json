{"ast":null,"code":"var _jsxFileName = \"/Users/konstasya/Downloads/test-avito/src/components/Issues/Main.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllIssues } from \"../../shared/api\";\nimport IssuesList from \"./IssuesList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIssuesData } from \"../../slices/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [data, setData] = useState(); //Все задачи\n  const [filteredIssues, setFilteredIssues] = useState([]);\n  const [statusFilter, setStatusFilter] = useState([]); // массив выбранных status\n  const [boardFilter, setBoardFilter] = useState([]); // массив выбранных boardId\n\n  // 3. Состояние для единого текстового поиска (по названию ИЛИ по исполнителю)\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const dispatch = useDispatch();\n  const allIssues = useSelector(state => state.dataIssues.dataAllIssues);\n  useEffect(() => {\n    getAllIssues().then(res => {\n      setData(res.data);\n      if (res) dispatch(setIssuesData(res.data));\n    }).catch(err => {\n      console.error(\"Ошибка\", err);\n    });\n  }, []);\n  useEffect(() => {\n    if (allIssues.length === 0) {\n      setFilteredIssues([]);\n      return;\n    }\n    const qLower = searchQuery.trim().toLowerCase();\n    const result = allIssues.filter(issue => {\n      // 7.1. Фильтр по статусу (если хоть один статус выбран)\n      if (statusFilter.length > 0 && !statusFilter.includes(issue.status)) {\n        return false;\n      }\n      // 7.2. Фильтр по доске (boardId) (если хоть одна доска выбрана)\n      if (boardFilter.length > 0 && !boardFilter.includes(issue.boardId)) {\n        return false;\n      }\n      // 7.3. Текстовый поиск: если задано searchQuery, проверяем, что либо title, либо assignee содержит подстроку\n      if (qLower) {\n        const inTitle = issue.title.toLowerCase().includes(qLower);\n        const inAssignee = issue.assignee.fullName.toLowerCase().includes(qLower);\n        if (!inTitle && !inAssignee) {\n          return false;\n        }\n      }\n      return true;\n    });\n    setFilteredIssues(result);\n  }, [allIssues, statusFilter, boardFilter, searchQuery]);\n  const handleFilterButtonClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleFilterMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // 9. Обработчики переключения чекбокса для статусов\n  const toggleStatus = status => {\n    setStatusFilter(prev => {\n      if (prev.includes(status)) {\n        return prev.filter(s => s !== status);\n      } else {\n        return [...prev, status];\n      }\n    });\n  };\n\n  // 10. Обработчики переключения чекбокса для досок\n  const toggleBoard = boardId => {\n    setBoardFilter(prev => {\n      if (prev.includes(boardId)) {\n        return prev.filter(id => id !== boardId);\n      } else {\n        return [...prev, boardId];\n      }\n    });\n  };\n\n  // 11. Обработчик для изменения строки поиска\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  // 12. Сброс всех фильтров\n  const resetAllFilters = () => {\n    setStatusFilter([]);\n    setBoardFilter([]);\n    setSearchQuery(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        gap: 2,\n        alignItems: \"center\",\n        mb: 3,\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        size: \"small\",\n        label: \"\\u041F\\u043E\\u0438\\u0441\\u043A (\\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043B\\u0438 \\u0438\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C)\",\n        value: searchQuery,\n        onChange: handleSearchChange,\n        sx: {\n          minWidth: 250\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleFilterButtonClick,\n        children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        onClick: resetAllFilters,\n        children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0432\\u0441\\u0451\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: isFilterMenuOpen,\n      onClose: handleFilterMenuClose,\n      MenuListProps: {\n        sx: {\n          p: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: Object.entries(COLUMN_STATUSES).map(([key, obj]) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: statusFilter.includes(obj.status),\n            onChange: () => toggleStatus(obj.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this),\n          label: obj.title\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"\\u0414\\u043E\\u0441\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: boards.map(board => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: boardFilter.includes(board.id),\n            onChange: () => toggleBoard(board.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this),\n          label: board.name\n        }, board.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IssuesList, {\n      data: filteredIssues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"ZWQy8MHFom6oEtpXxFqsu1WExzU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","getAllIssues","IssuesList","useDispatch","useSelector","setIssuesData","jsxDEV","_jsxDEV","Main","_s","data","setData","filteredIssues","setFilteredIssues","statusFilter","setStatusFilter","boardFilter","setBoardFilter","searchQuery","setSearchQuery","dispatch","allIssues","state","dataIssues","dataAllIssues","then","res","catch","err","console","error","length","qLower","trim","toLowerCase","result","filter","issue","includes","status","boardId","inTitle","title","inAssignee","assignee","fullName","handleFilterButtonClick","event","setAnchorEl","currentTarget","handleFilterMenuClose","toggleStatus","prev","s","toggleBoard","id","handleSearchChange","e","target","value","resetAllFilters","Box","sx","p","children","display","gap","alignItems","mb","flexWrap","TextField","size","label","onChange","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","Button","variant","onClick","Menu","anchorEl","open","isFilterMenuOpen","onClose","MenuListProps","Typography","FormGroup","Object","entries","COLUMN_STATUSES","map","key","obj","FormControlLabel","control","Checkbox","checked","Divider","my","boards","board","name","_c","$RefreshReg$"],"sources":["/Users/konstasya/Downloads/test-avito/src/components/Issues/Main.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getAllIssues } from \"../../shared/api\"\nimport { DataProjectIssue, State } from \"../../types/types\"\nimport IssuesList from \"./IssuesList\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIssuesData } from \"../../slices/slice\";\n\nconst Main = () =>{\n    const [data, setData] = useState<DataProjectIssue[]>(); //Все задачи\n    const [filteredIssues, setFilteredIssues] = useState<DataProjectIssue[]>([]);\n\n    const [statusFilter, setStatusFilter] = useState<string[]>([]);   // массив выбранных status\n  const [boardFilter, setBoardFilter] = useState<number[]>([]);     // массив выбранных boardId\n\n  // 3. Состояние для единого текстового поиска (по названию ИЛИ по исполнителю)\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n\n    const dispatch = useDispatch()\n    const allIssues = useSelector((state:State)=>state.dataIssues.dataAllIssues)\n\n    useEffect(() => {\n      getAllIssues()\n        .then((res) => {\n            setData(res.data)\n            if (res) dispatch(setIssuesData(res.data))}\n        )\n        .catch((err) => {\n          console.error(\"Ошибка\", err);\n        });\n    }, []);\n\n    useEffect(() => {\n      if (allIssues.length === 0) {\n        setFilteredIssues([]);\n        return;\n      }\n      const qLower = searchQuery.trim().toLowerCase();\n      const result = allIssues.filter((issue) => {\n        // 7.1. Фильтр по статусу (если хоть один статус выбран)\n        if (statusFilter.length > 0 && !statusFilter.includes(issue.status)) {\n          return false;\n        }\n        // 7.2. Фильтр по доске (boardId) (если хоть одна доска выбрана)\n        if (boardFilter.length > 0 && !boardFilter.includes(issue.boardId)) {\n          return false;\n        }\n        // 7.3. Текстовый поиск: если задано searchQuery, проверяем, что либо title, либо assignee содержит подстроку\n        if (qLower) {\n          const inTitle = issue.title.toLowerCase().includes(qLower);\n          const inAssignee = issue.assignee.fullName.toLowerCase().includes(qLower);\n          if (!inTitle && !inAssignee) {\n            return false;\n          }\n        }\n        return true;\n      });\n      setFilteredIssues(result);\n    }, [allIssues, statusFilter, boardFilter, searchQuery]);\n  \n    const handleFilterButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    };\n    const handleFilterMenuClose = () => {\n      setAnchorEl(null);\n    };\n  \n    // 9. Обработчики переключения чекбокса для статусов\n    const toggleStatus = (status: string) => {\n      setStatusFilter((prev) => {\n        if (prev.includes(status)) {\n          return prev.filter((s) => s !== status);\n        } else {\n          return [...prev, status];\n        }\n      });\n    };\n  \n    // 10. Обработчики переключения чекбокса для досок\n    const toggleBoard = (boardId: number) => {\n      setBoardFilter((prev) => {\n        if (prev.includes(boardId)) {\n          return prev.filter((id) => id !== boardId);\n        } else {\n          return [...prev, boardId];\n        }\n      });\n    };\n  \n    // 11. Обработчик для изменения строки поиска\n    const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n      setSearchQuery(e.target.value);\n    };\n  \n    // 12. Сброс всех фильтров\n    const resetAllFilters = () => {\n      setStatusFilter([]);\n      setBoardFilter([]);\n      setSearchQuery(\"\");\n    };\n\n    return (\n    <Box sx={{ p: 2 }}>\n      {/* Блок с единой строкой поиска + кнопкой \"Фильтры\" */}\n      <Box\n        sx={{\n          display: \"flex\",\n          gap: 2,\n          alignItems: \"center\",\n          mb: 3,\n          flexWrap: \"wrap\",\n        }}\n      >\n        {/* 12.1. Единое текстовое поле для поиска по названию ИЛИ по исполнителю */}\n        <TextField\n          size=\"small\"\n          label=\"Поиск (название или исполнитель)\"\n          value={searchQuery}\n          onChange={handleSearchChange}\n          sx={{ minWidth: 250 }}\n        />\n\n        {/* 12.2. Кнопка открытия меню фильтров */}\n        <Button\n          variant=\"outlined\"\n          onClick={handleFilterButtonClick}\n        >\n          Фильтры\n        </Button>\n\n        {/* 12.3. Кнопка сброса всех фильтров */}\n        <Button variant=\"text\" onClick={resetAllFilters}>\n          Сбросить всё\n        </Button>\n      </Box>\n\n      {/* 13. Меню фильтров */}\n      <Menu\n        anchorEl={anchorEl}\n        open={isFilterMenuOpen}\n        onClose={handleFilterMenuClose}\n        MenuListProps={{ sx: { p: 2 } }}\n      >\n        {/* 13.1. Секция: Статусы */}\n        <Typography variant=\"subtitle1\">Статус задачи</Typography>\n        <FormGroup>\n          {Object.entries(COLUMN_STATUSES).map(([key, obj]) => (\n            <FormControlLabel\n              key={key}\n              control={\n                <Checkbox\n                  checked={statusFilter.includes(obj.status)}\n                  onChange={() => toggleStatus(obj.status)}\n                />\n              }\n              label={obj.title}\n            />\n          ))}\n        </FormGroup>\n\n        <Divider sx={{ my: 1 }} />\n\n        {/* 13.2. Секция: Доски */}\n        <Typography variant=\"subtitle1\">Доска</Typography>\n        <FormGroup>\n          {boards.map((board) => (\n            <FormControlLabel\n              key={board.id}\n              control={\n                <Checkbox\n                  checked={boardFilter.includes(board.id)}\n                  onChange={() => toggleBoard(board.id)}\n                />\n              }\n              label={board.name}\n            />\n          ))}\n        </FormGroup>\n      </Menu>\n\n      {/* 14. Отображаем уже отфильтрованный список */}\n      <IssuesList data={filteredIssues} />\n    </Box>\n  );\n};\nexport default Main"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAqB,CAAC,CAAC,CAAC;EACxD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAqB,EAAE,CAAC;EAE5E,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAW,EAAE,CAAC,CAAC,CAAG;EACpE,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAW,EAAE,CAAC,CAAC,CAAK;;EAElE;EACA,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAS,EAAE,CAAC;EAExD,MAAMoB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,SAAS,GAAGjB,WAAW,CAAEkB,KAAW,IAAGA,KAAK,CAACC,UAAU,CAACC,aAAa,CAAC;EAE5EzB,SAAS,CAAC,MAAM;IACdE,YAAY,CAAC,CAAC,CACXwB,IAAI,CAAEC,GAAG,IAAK;MACXf,OAAO,CAACe,GAAG,CAAChB,IAAI,CAAC;MACjB,IAAIgB,GAAG,EAAEN,QAAQ,CAACf,aAAa,CAACqB,GAAG,CAAChB,IAAI,CAAC,CAAC;IAAA,CAC9C,CAAC,CACAiB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEF,GAAG,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN7B,SAAS,CAAC,MAAM;IACd,IAAIsB,SAAS,CAACU,MAAM,KAAK,CAAC,EAAE;MAC1BlB,iBAAiB,CAAC,EAAE,CAAC;MACrB;IACF;IACA,MAAMmB,MAAM,GAAGd,WAAW,CAACe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC/C,MAAMC,MAAM,GAAGd,SAAS,CAACe,MAAM,CAAEC,KAAK,IAAK;MACzC;MACA,IAAIvB,YAAY,CAACiB,MAAM,GAAG,CAAC,IAAI,CAACjB,YAAY,CAACwB,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAC,EAAE;QACnE,OAAO,KAAK;MACd;MACA;MACA,IAAIvB,WAAW,CAACe,MAAM,GAAG,CAAC,IAAI,CAACf,WAAW,CAACsB,QAAQ,CAACD,KAAK,CAACG,OAAO,CAAC,EAAE;QAClE,OAAO,KAAK;MACd;MACA;MACA,IAAIR,MAAM,EAAE;QACV,MAAMS,OAAO,GAAGJ,KAAK,CAACK,KAAK,CAACR,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACN,MAAM,CAAC;QAC1D,MAAMW,UAAU,GAAGN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACX,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACN,MAAM,CAAC;QACzE,IAAI,CAACS,OAAO,IAAI,CAACE,UAAU,EAAE;UAC3B,OAAO,KAAK;QACd;MACF;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IACF9B,iBAAiB,CAACsB,MAAM,CAAC;EAC3B,CAAC,EAAE,CAACd,SAAS,EAAEP,YAAY,EAAEE,WAAW,EAAEE,WAAW,CAAC,CAAC;EAEvD,MAAM4B,uBAAuB,GAAIC,KAAoC,IAAK;IACxEC,WAAW,CAACD,KAAK,CAACE,aAAa,CAAC;EAClC,CAAC;EACD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIZ,MAAc,IAAK;IACvCxB,eAAe,CAAEqC,IAAI,IAAK;MACxB,IAAIA,IAAI,CAACd,QAAQ,CAACC,MAAM,CAAC,EAAE;QACzB,OAAOa,IAAI,CAAChB,MAAM,CAAEiB,CAAC,IAAKA,CAAC,KAAKd,MAAM,CAAC;MACzC,CAAC,MAAM;QACL,OAAO,CAAC,GAAGa,IAAI,EAAEb,MAAM,CAAC;MAC1B;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMe,WAAW,GAAId,OAAe,IAAK;IACvCvB,cAAc,CAAEmC,IAAI,IAAK;MACvB,IAAIA,IAAI,CAACd,QAAQ,CAACE,OAAO,CAAC,EAAE;QAC1B,OAAOY,IAAI,CAAChB,MAAM,CAAEmB,EAAE,IAAKA,EAAE,KAAKf,OAAO,CAAC;MAC5C,CAAC,MAAM;QACL,OAAO,CAAC,GAAGY,IAAI,EAAEZ,OAAO,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMgB,kBAAkB,GAAIC,CAAgC,IAAK;IAC/DtC,cAAc,CAACsC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B7C,eAAe,CAAC,EAAE,CAAC;IACnBE,cAAc,CAAC,EAAE,CAAC;IAClBE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,oBACAZ,OAAA,CAACsD,GAAG;IAACC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAEhBzD,OAAA,CAACsD,GAAG;MACFC,EAAE,EAAE;QACFG,OAAO,EAAE,MAAM;QACfC,GAAG,EAAE,CAAC;QACNC,UAAU,EAAE,QAAQ;QACpBC,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE;MACZ,CAAE;MAAAL,QAAA,gBAGFzD,OAAA,CAAC+D,SAAS;QACRC,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,yKAAkC;QACxCb,KAAK,EAAEzC,WAAY;QACnBuD,QAAQ,EAAEjB,kBAAmB;QAC7BM,EAAE,EAAE;UAAEY,QAAQ,EAAE;QAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eAGFvE,OAAA,CAACwE,MAAM;QACLC,OAAO,EAAC,UAAU;QAClBC,OAAO,EAAEnC,uBAAwB;QAAAkB,QAAA,EAClC;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGTvE,OAAA,CAACwE,MAAM;QAACC,OAAO,EAAC,MAAM;QAACC,OAAO,EAAErB,eAAgB;QAAAI,QAAA,EAAC;MAEjD;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNvE,OAAA,CAAC2E,IAAI;MACHC,QAAQ,EAAEA,QAAS;MACnBC,IAAI,EAAEC,gBAAiB;MACvBC,OAAO,EAAEpC,qBAAsB;MAC/BqC,aAAa,EAAE;QAAEzB,EAAE,EAAE;UAAEC,CAAC,EAAE;QAAE;MAAE,CAAE;MAAAC,QAAA,gBAGhCzD,OAAA,CAACiF,UAAU;QAACR,OAAO,EAAC,WAAW;QAAAhB,QAAA,EAAC;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC1DvE,OAAA,CAACkF,SAAS;QAAAzB,QAAA,EACP0B,MAAM,CAACC,OAAO,CAACC,eAAe,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,GAAG,CAAC,kBAC9CxF,OAAA,CAACyF,gBAAgB;UAEfC,OAAO,eACL1F,OAAA,CAAC2F,QAAQ;YACPC,OAAO,EAAErF,YAAY,CAACwB,QAAQ,CAACyD,GAAG,CAACxD,MAAM,CAAE;YAC3CkC,QAAQ,EAAEA,CAAA,KAAMtB,YAAY,CAAC4C,GAAG,CAACxD,MAAM;UAAE;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CACF;UACDN,KAAK,EAAEuB,GAAG,CAACrD;QAAM,GAPZoD,GAAG;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQT,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eAEZvE,OAAA,CAAC6F,OAAO;QAACtC,EAAE,EAAE;UAAEuC,EAAE,EAAE;QAAE;MAAE;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG1BvE,OAAA,CAACiF,UAAU;QAACR,OAAO,EAAC,WAAW;QAAAhB,QAAA,EAAC;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAClDvE,OAAA,CAACkF,SAAS;QAAAzB,QAAA,EACPsC,MAAM,CAACT,GAAG,CAAEU,KAAK,iBAChBhG,OAAA,CAACyF,gBAAgB;UAEfC,OAAO,eACL1F,OAAA,CAAC2F,QAAQ;YACPC,OAAO,EAAEnF,WAAW,CAACsB,QAAQ,CAACiE,KAAK,CAAChD,EAAE,CAAE;YACxCkB,QAAQ,EAAEA,CAAA,KAAMnB,WAAW,CAACiD,KAAK,CAAChD,EAAE;UAAE;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CACF;UACDN,KAAK,EAAE+B,KAAK,CAACC;QAAK,GAPbD,KAAK,CAAChD,EAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQd,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGPvE,OAAA,CAACL,UAAU;MAACQ,IAAI,EAAEE;IAAe;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACrE,EAAA,CAhLID,IAAI;EAAA,QAUWL,WAAW,EACVC,WAAW;AAAA;AAAAqG,EAAA,GAX3BjG,IAAI;AAiLV,eAAeA,IAAI;AAAA,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}